<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-28T19:27:31 IST" name="Default suite" finished-at="2024-02-28T19:34:54 IST" duration-ms="443036">
    <groups>
    </groups>
    <test started-at="2024-02-28T19:27:31 IST" name="Default test" finished-at="2024-02-28T19:34:54 IST" duration-ms="443036">
      <class name="strongroom.Testing">
        <test-method is-config="true" signature="setUp()[pri:0, instance:strongroom.Testing@537f60bf]" started-at="2024-02-28T19:27:31 IST" name="setUp" finished-at="2024-02-28T19:27:32 IST" duration-ms="1258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="login()[pri:0, instance:strongroom.Testing@537f60bf]" started-at="2024-02-28T19:27:33 IST" name="login" finished-at="2024-02-28T19:27:50 IST" duration-ms="17265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="automation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:strongroom.Testing@537f60bf]" started-at="2024-02-28T19:27:50 IST" name="automation" data-provider="getTestData" finished-at="2024-02-28T19:28:42 IST" duration-ms="52335" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Transfer out Patient]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Facility 3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[(chloroxylenol) chloroxylenol 4.8% solution]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Nancy Holt]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Added Note]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[valeshan.naidoo@strongroom.ai]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[1111]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- automation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:strongroom.Testing@537f60bf]" started-at="2024-02-28T19:28:42 IST" name="tearDown" finished-at="2024-02-28T19:28:52 IST" duration-ms="9284" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=automation status=SUCCESS method=Testing.automation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:strongroom.Testing@537f60bf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="login()[pri:0, instance:strongroom.Testing@537f60bf]" started-at="2024-02-28T19:28:52 IST" name="login" finished-at="2024-02-28T19:29:06 IST" duration-ms="14761" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="automation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:strongroom.Testing@537f60bf]" started-at="2024-02-28T19:29:06 IST" name="automation" data-provider="getTestData" finished-at="2024-02-28T19:29:27 IST" duration-ms="20454" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Transfer out Patient]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Facility 3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[fdfbdfbfb]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Perry Grant]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Added Note]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[valeshan.naidoo@strongroom.ai]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[1111]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for presence of element located by: By.xpath: //p[normalize-space()='Stock'] (tried for 15 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for presence of element located by: By.xpath: //p[normalize-space()='Stock'] (tried for 15 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:229)
at strongroom.TransferoutPatient.transferoutPatient(TransferoutPatient.java:24)
at strongroom.Testing.automation(Testing.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[normalize-space()='Stock']"}
  (Session info: chrome=122.0.6261.70)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [249c9980394d675e4c036206a3610c49, findElement {using=xpath, value=//p[normalize-space()='Stock']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 122.0.6261.70, chrome: {chromedriverVersion: 122.0.6261.94 (880dbf29479c..., userDataDir: C:\Users\bhako\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55841}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55841/devtoo..., se:cdpVersion: 122.0.6261.70, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 249c9980394d675e4c036206a3610c49
at jdk.internal.reflect.GeneratedConstructorAccessor37.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:523)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:360)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:354)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:171)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:168)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:204)
... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- automation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:strongroom.Testing@537f60bf]" started-at="2024-02-28T19:29:27 IST" name="tearDown" finished-at="2024-02-28T19:29:36 IST" duration-ms="9495" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=automation status=FAILURE method=Testing.automation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:strongroom.Testing@537f60bf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="login()[pri:0, instance:strongroom.Testing@537f60bf]" started-at="2024-02-28T19:29:36 IST" name="login" finished-at="2024-02-28T19:29:51 IST" duration-ms="14390" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="automation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:strongroom.Testing@537f60bf]" started-at="2024-02-28T19:29:51 IST" name="automation" data-provider="getTestData" finished-at="2024-02-28T19:30:08 IST" duration-ms="17416" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Transfer out Patient]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[asdasdad]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[(chloroxylenol) chloroxylenol 4.8% solution]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Nancy Holt]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Added Note]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[valeshan.naidoo@strongroom.ai]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[1111]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- automation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:strongroom.Testing@537f60bf]" started-at="2024-02-28T19:30:08 IST" name="tearDown" finished-at="2024-02-28T19:30:20 IST" duration-ms="11513" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=automation status=SUCCESS method=Testing.automation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:strongroom.Testing@537f60bf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="login()[pri:0, instance:strongroom.Testing@537f60bf]" started-at="2024-02-28T19:30:20 IST" name="login" finished-at="2024-02-28T19:30:39 IST" duration-ms="18928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="automation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:strongroom.Testing@537f60bf]" started-at="2024-02-28T19:30:39 IST" name="automation" data-provider="getTestData" finished-at="2024-02-28T19:31:59 IST" duration-ms="80933" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Transfer out Patient]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Facility 3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[(amoxicillin) Moxacin 500 mg capsule]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Perry Grant]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Added Note]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[valeshan.naidoo@strongroom.ai]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[1115.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- automation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:strongroom.Testing@537f60bf]" started-at="2024-02-28T19:31:59 IST" name="tearDown" finished-at="2024-02-28T19:32:09 IST" duration-ms="10032" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=automation status=SUCCESS method=Testing.automation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:strongroom.Testing@537f60bf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="login()[pri:0, instance:strongroom.Testing@537f60bf]" started-at="2024-02-28T19:32:09 IST" name="login" finished-at="2024-02-28T19:32:28 IST" duration-ms="18108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="automation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:strongroom.Testing@537f60bf]" started-at="2024-02-28T19:32:28 IST" name="automation" data-provider="getTestData" finished-at="2024-02-28T19:33:49 IST" duration-ms="81027" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Transfer out Patient]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Facility 3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[(amoxicillin) Moxacin 500 mg capsule]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Perry Grant]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Added Note]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[valeshan.naidoo@strongroom.ai]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[1111.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- automation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:strongroom.Testing@537f60bf]" started-at="2024-02-28T19:33:49 IST" name="tearDown" finished-at="2024-02-28T19:33:58 IST" duration-ms="9829" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=automation status=SUCCESS method=Testing.automation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:strongroom.Testing@537f60bf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="login()[pri:0, instance:strongroom.Testing@537f60bf]" started-at="2024-02-28T19:33:58 IST" name="login" finished-at="2024-02-28T19:34:13 IST" duration-ms="15019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="automation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:strongroom.Testing@537f60bf]" started-at="2024-02-28T19:34:13 IST" name="automation" data-provider="getTestData" finished-at="2024-02-28T19:34:42 IST" duration-ms="28707" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Transfer out Patient]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Facility 3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[(amoxicillin) Moxacin 500 mg capsule]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[asdasdad]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Added Note]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[valeshan.naidoo@strongroom.ai]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[1111.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- automation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:strongroom.Testing@537f60bf]" started-at="2024-02-28T19:34:42 IST" name="tearDown" finished-at="2024-02-28T19:34:54 IST" duration-ms="11525" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=automation status=SUCCESS method=Testing.automation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:strongroom.Testing@537f60bf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:strongroom.Testing@537f60bf]" started-at="2024-02-28T19:34:54 IST" name="tearDown" finished-at="2024-02-28T19:34:54 IST" duration-ms="126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- strongroom.Testing -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
